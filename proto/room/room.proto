syntax = "proto3";

package proto.room;

option go_package = "im/proto/room;room";

// 通行证字段
message PassToken {
    string tenantCode = 1;
    string roomCode = 2;
    string userType = 3;
    uint64 userId = 4;
    string userName = 5;
    string userThumb = 6;
    string userTags = 7;
}

// 消息格式-From
message From {
    string path = 1;            // 来源路径 $FrontierId.ConnId
    PassToken passToken = 2;    // 来源用户信息
}
// 消息格式-To
message To {
    string path = 1;
}
// 消息格式
message Message {
    string type = 1;                // 动作，空字符串，就是普通消息
    string content = 2;             // 内容
    string contentType = 3;         // 内容类型
    uint64 clientMsgId = 4;         // 客户端消息ID
    string serverMsgId = 5;         // 服务端消息ID
    uint64 serverMsgTimestamp = 6;  // 时间戳
    From from = 7;                  // 源
    To to = 8;                      // 目标
    map<string, bool> ruledOut = 9; // 排除需要推送的连接
}

// 消息记录的返回格式
message Record {
    string id = 1;
    string payload = 2;
}

service RoomService {
    // 制作用户通行证
    rpc MakePassToken(MakePassTokenReq) returns (MakePassTokenRsp);
    // 查看用户通行证
    rpc ViewPassToken(ViewPassTokenReq) returns (ViewPassTokenRsp);

    // 用户加入
    rpc Join(JoinReq) returns (JoinRsp);

    // 用户离开
    rpc Leave(LeaveReq) returns (LeaveRsp);

    // 房间用户数量
    rpc GetUsersCount(GetUsersCountReq) returns (GetUsersCountRsp);
    rpc SetUsersCount(SetUsersCountReq) returns (SetUsersCountRsp);

    // 广播消息
    rpc Broadcast(BroadcastReq) returns (BroadcastRsp);

    // 读取消息记录
    rpc Record(RecordReq) returns (RecordRsp);
}

message MakePassTokenReq {
    string tenantCode = 1;
    string tenantKey = 2;
    string roomCode = 3;
    string userType = 4;
    uint64 userId = 5;
    string userName = 6;
    string userThumb = 7;
    string userTags = 8;
}
message MakePassTokenRsp {
    uint64 code = 1;
    string message = 2;
    string token = 3;
}

message ViewPassTokenReq {
    string token = 1;
}
message ViewPassTokenRsp {
    PassToken passToken = 1;
}

message JoinReq {
    PassToken passToken = 1;
    uint64 frontierId = 2;
    uint64 connId = 3;
}
message JoinRsp {
    uint64 code = 1;
    string message = 2;
    PassToken passToken = 3;
    string lastMessageId = 4;
}

message LeaveReq{
    PassToken passToken = 1;
}
message LeaveRsp{
    uint64 code = 1;
    string message = 2;
}

message GetUsersCountReq {
    string tenantCode = 1;
    string roomCode = 2;
}
message GetUsersCountRsp {
    uint64 count = 1;
}

message SetUsersCountReq {
    uint64 frontierId = 1;
    string tenantCode = 2;
    string roomCode = 3;
    uint64 count = 4;
}
message SetUsersCountRsp {
    uint64 count = 1;
}

message BroadcastReq{
    Message message = 1;
}
message BroadcastRsp{
    Message message = 1;
}

message RecordReq {
    string tenantCode = 1;
    string roomCode = 2;
    string lastMessageId = 3;
    uint64 count = 4;
}
message RecordRsp {
    repeated Message record = 1;
}
